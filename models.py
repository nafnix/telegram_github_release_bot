# generated by datamodel-codegen:
#   filename:  release.json
#   timestamp: 2025-04-09T09:45:50+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import BaseModel, Field


class Model(BaseModel):
    changes_body__from_: Optional[str] = Field(
        None,
        alias='changes[body][from]',
        description='The previous version of the body if the action was `edited`.',
    )
    changes_name__from_: Optional[str] = Field(
        None,
        alias='changes[name][from]',
        description='The previous version of the name if the action was `edited`.',
    )
    release: Optional[dict[str, Any]] = Field(
        None,
        description='The [release](https://docs.github.com/en/rest/reference/repos/#get-a-release) object.',
    )
    repository: Optional[dict[str, Any]] = Field(
        None,
        description='The [`repository`](https://docs.github.com/en/rest/reference/repos#get-a-repository) where the event occurred.',
    )
    organization: Optional[dict[str, Any]] = Field(
        None,
        description='Webhook payloads contain the [`organization`](https://docs.github.com/en/rest/reference/orgs#get-an-organization) object when the webhook is configured for an organization or the event occurs from activity in a repository owned by an organization.',
    )
    installation: Optional[dict[str, Any]] = Field(
        None,
        description='The GitHub App installation. Webhook payloads contain the `installation` property when the event is configured for and sent to a GitHub App.',
    )
    sender: Optional[dict[str, Any]] = Field(
        None, description='The user that triggered the event.'
    )
